version: '3.8'  # Specify the Docker Compose file version  

services:  
  immich-server:  
    container_name: immich_server  
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}  
    volumes:  
      - ${UPLOAD_LOCATION}:/usr/src/app/upload  
      - /etc/localtime:/etc/localtime:ro  
    env_file:  
      - .env  
    ports:  
      - 2283:3001  
    depends_on:  
      - redis  
      - database  
    restart: always  
    healthcheck:  
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]  # Adjust the command as necessary  
      interval: 30s  
      timeout: 10s  
      retries: 5  

  immich-machine-learning:  
    container_name: immich_machine_learning  
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}  
    volumes:  
      - model-cache:/cache  
    env_file:  
      - .env  
    restart: always  
    healthcheck:  
      test: ["CMD", "curl", "-f", "http://localhost:your_ml_service_port/health"]  # Adjust the command as necessary  
      interval: 30s  
      timeout: 10s  
      retries: 5  

  redis:  
    container_name: immich_redis  
    image: docker.io/redis:6.2-alpine@sha256:2d1463258f2764328496376f5d965f20c6a67f66ea2b06dc42af351f75248792  
    healthcheck:  
      test: ["CMD", "redis-cli", "ping"]  
      interval: 30s  
      timeout: 10s  
      retries: 5  
    restart: always  

  database:  
    container_name: immich_postgres  
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0  
    environment:  
      POSTGRES_PASSWORD: ${DB_PASSWORD}  
      POSTGRES_USER: ${DB_USERNAME}  
      POSTGRES_DB: ${DB_DATABASE_NAME}  
      POSTGRES_INITDB_ARGS: '--data-checksums'  
    volumes:  
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data  
    healthcheck:  
      test: ["CMD", "pg_isready", "--dbname='${DB_DATABASE_NAME}'", "--username='${DB_USERNAME}'"]  
      interval: 30s  
      timeout: 10s  
      retries: 5  
    command: ["postgres", "-c", "shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]  
    restart: always  

volumes:  
  model-cache:
